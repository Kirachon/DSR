# DSR Load Balancing and Auto-Scaling Configuration
# Comprehensive load balancing, auto-scaling policies, and resource allocation
# Phase 2.2.3 Implementation - COMPLETED
# Status: âœ… PRODUCTION READY - All load balancing and scaling configurations implemented

apiVersion: v1
kind: Namespace
metadata:
  name: dsr-production
  labels:
    name: dsr-production
    environment: production

---
# NGINX Ingress Controller Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dsr-ingress
  namespace: dsr-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - dsr.gov.ph
        - api.dsr.gov.ph
      secretName: dsr-tls-secret
  rules:
    - host: dsr.gov.ph
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dsr-frontend-service
                port:
                  number: 80
    - host: api.dsr.gov.ph
      http:
        paths:
          - path: /api/v1/registration
            pathType: Prefix
            backend:
              service:
                name: dsr-registration-service
                port:
                  number: 8080
          - path: /api/v1/data-management
            pathType: Prefix
            backend:
              service:
                name: dsr-data-management-service
                port:
                  number: 8081
          - path: /api/v1/eligibility
            pathType: Prefix
            backend:
              service:
                name: dsr-eligibility-service
                port:
                  number: 8082
          - path: /api/v1/interoperability
            pathType: Prefix
            backend:
              service:
                name: dsr-interoperability-service
                port:
                  number: 8083
          - path: /api/v1/payments
            pathType: Prefix
            backend:
              service:
                name: dsr-payment-service
                port:
                  number: 8084
          - path: /api/v1/grievance
            pathType: Prefix
            backend:
              service:
                name: dsr-grievance-service
                port:
                  number: 8085
          - path: /api/v1/analytics
            pathType: Prefix
            backend:
              service:
                name: dsr-analytics-service
                port:
                  number: 8086

---
# Horizontal Pod Autoscaler for Registration Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dsr-registration-hpa
  namespace: dsr-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dsr-registration-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 25
          periodSeconds: 60
        - type: Pods
          value: 1
          periodSeconds: 60
      selectPolicy: Min

---
# Horizontal Pod Autoscaler for Data Management Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dsr-data-management-hpa
  namespace: dsr-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dsr-data-management-service
  minReplicas: 4
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 3
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 25
          periodSeconds: 60
        - type: Pods
          value: 1
          periodSeconds: 60
      selectPolicy: Min

---
# Horizontal Pod Autoscaler for Payment Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dsr-payment-hpa
  namespace: dsr-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dsr-payment-service
  minReplicas: 3
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 25
          periodSeconds: 60
        - type: Pods
          value: 1
          periodSeconds: 60
      selectPolicy: Min

---
# Pod Disruption Budget for Registration Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dsr-registration-pdb
  namespace: dsr-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dsr-registration-service

---
# Pod Disruption Budget for Data Management Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dsr-data-management-pdb
  namespace: dsr-production
spec:
  minAvailable: 3
  selector:
    matchLabels:
      app: dsr-data-management-service

---
# Pod Disruption Budget for Payment Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dsr-payment-pdb
  namespace: dsr-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dsr-payment-service

---
# Service for Registration Service with Load Balancing
apiVersion: v1
kind: Service
metadata:
  name: dsr-registration-service
  namespace: dsr-production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: dsr-registration-service

---
# Network Policy for Load Balancer Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dsr-load-balancer-policy
  namespace: dsr-production
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: dsr-infrastructure
      ports:
        - protocol: TCP
          port: 5432  # PostgreSQL
        - protocol: TCP
          port: 6379  # Redis
        - protocol: TCP
          port: 9092  # Kafka

---
# Cluster Autoscaler Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-autoscaler-status
  namespace: kube-system
data:
  nodes.max: "20"
  nodes.min: "3"
  scale-down-delay-after-add: "10m"
  scale-down-unneeded-time: "10m"
  scale-down-utilization-threshold: "0.5"
  skip-nodes-with-local-storage: "false"
  skip-nodes-with-system-pods: "false"

---
# Resource Quotas for DSR Production Namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: dsr-production-quota
  namespace: dsr-production
spec:
  hard:
    requests.cpu: "20"
    requests.memory: "40Gi"
    limits.cpu: "40"
    limits.memory: "80Gi"
    persistentvolumeclaims: "10"
    services: "20"
    secrets: "20"
    configmaps: "20"

---
# Limit Range for Pod Resources
apiVersion: v1
kind: LimitRange
metadata:
  name: dsr-production-limits
  namespace: dsr-production
spec:
  limits:
    - type: Container
      default:
        cpu: "500m"
        memory: "1Gi"
      defaultRequest:
        cpu: "100m"
        memory: "256Mi"
      max:
        cpu: "2"
        memory: "4Gi"
      min:
        cpu: "50m"
        memory: "128Mi"
    - type: Pod
      max:
        cpu: "4"
        memory: "8Gi"
      min:
        cpu: "100m"
        memory: "256Mi"

---
# Priority Class for Critical DSR Services
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: dsr-critical-priority
value: 1000
globalDefault: false
description: "Priority class for critical DSR services"

---
# Priority Class for Standard DSR Services
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: dsr-standard-priority
value: 500
globalDefault: false
description: "Priority class for standard DSR services"
