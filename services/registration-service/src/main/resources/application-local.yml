# Philippine Dynamic Social Registry (DSR) - Registration Service
# Local Development Configuration
# Version: 1.0.0

server:
  port: ${REGISTRATION_SERVICE_PORT:8080}
  servlet:
    context-path: /
  shutdown: graceful
  tomcat:
    threads:
      max: 50
      min-spare: 5
    connection-timeout: 20000
    max-connections: 200

spring:
  application:
    name: dsr-registration-service

  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/dsr_local}
    username: ${DATABASE_USERNAME:dsr_user}
    password: ${DATABASE_PASSWORD:dsr_local_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${SPRING_JPA_FORMAT_SQL:false}
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        generate_statistics: false
        default_schema: dsr_core
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
      batch-size: 16384
      linger-ms: 5
      properties:
        enable.idempotence: true
    consumer:
      group-id: ${KAFKA_GROUP_ID_PREFIX:dsr_local}_registration_service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}
      enable-auto-commit: ${KAFKA_ENABLE_AUTO_COMMIT:true}
      properties:
        spring.json.trusted.packages: "ph.gov.dsr.*"
  
  # Cache Configuration
  cache:
    type: simple
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: ${REDIS_TIMEOUT:2000ms}
      lettuce:
        pool:
          max-active: ${REDIS_MAX_CONNECTIONS:8}
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # Development Tools
  devtools:
    restart:
      enabled: ${SPRING_DEVTOOLS_RESTART_ENABLED:true}
    livereload:
      enabled: ${SPRING_DEVTOOLS_LIVERELOAD_ENABLED:true}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE:health,info,metrics,prometheus,env,configprops}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
  metrics:
    export:
      prometheus:
        enabled: ${METRICS_EXPORT_PROMETHEUS_ENABLED:true}

# Logging Configuration
logging:
  level:
    root: ${ROOT_LOG_LEVEL:INFO}
    ph.gov.dsr: ${DSR_LOG_LEVEL:DEBUG}
    org.springframework: ${SPRING_LOG_LEVEL:INFO}
    org.hibernate: ${HIBERNATE_LOG_LEVEL:WARN}
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: ${LOG_CONSOLE_PATTERN:%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n}
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:./logs}/registration-service.log
    max-size: ${LOG_FILE_MAX_SIZE:100MB}
    max-history: ${LOG_FILE_MAX_HISTORY:30}

# DSR Specific Configuration
dsr:
  registration:
    # Database mode enabled
    mock-enabled: false

    # PhilSys Integration (Mock for local)
    philsys:
      api-url: ${PHILSYS_API_URL:http://localhost:9000/api/v1}
      api-key: ${PHILSYS_API_KEY:local_development_key}
      timeout: ${PHILSYS_TIMEOUT:30000}
      mock-enabled: ${MOCK_PHILSYS_ENABLED:true}

    # Validation Configuration
    validation:
      strict-mode: false  # Relaxed for local development
      skip-document-validation: ${SKIP_DOCUMENT_VALIDATION:false}
      auto-approve: ${AUTO_APPROVE_REGISTRATIONS:false}

    # Processing Configuration
    processing:
      async-enabled: true
      batch-size: 50
      retry-attempts: 3
      retry-delay: 5000
    
    # Document Storage (Local filesystem)
    document-storage:
      type: ${DOCUMENT_STORAGE_TYPE:filesystem}
      path: ${DOCUMENT_STORAGE_PATH:./local-storage/documents}
      max-size: ${DOCUMENT_MAX_SIZE:10MB}
    
    # Notification Configuration
    notifications:
      sms:
        provider: ${SMS_PROVIDER:mock}
        enabled: ${FEATURE_SMS_NOTIFICATIONS:false}
      email:
        provider: ${EMAIL_PROVIDER:mock}
        enabled: ${FEATURE_EMAIL_NOTIFICATIONS:true}
      push:
        provider: ${PUSH_NOTIFICATION_PROVIDER:mock}
        enabled: ${FEATURE_PUSH_NOTIFICATIONS:false}

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:local_development_secret_key_change_in_production}
    expiration: ${JWT_EXPIRATION:86400}
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800}
  
  oauth2:
    client:
      client-id: ${OAUTH_CLIENT_ID:dsr_local_client}
      client-secret: ${OAUTH_CLIENT_SECRET:dsr_local_secret}
      redirect-uri: ${OAUTH_REDIRECT_URI:http://localhost:3000/auth/callback}
  
  encryption:
    key: ${ENCRYPTION_KEY:local_development_encryption_key_32_chars}
    algorithm: ${ENCRYPTION_ALGORITHM:AES-256-GCM}

# Feature Flags
features:
  philsys-integration: ${FEATURE_PHILSYS_INTEGRATION:false}
  document-upload: ${FEATURE_DOCUMENT_UPLOAD:true}
  audit-logging: ${FEATURE_AUDIT_LOGGING:true}
  analytics-collection: ${FEATURE_ANALYTICS_COLLECTION:true}

# Tracing Configuration
tracing:
  jaeger:
    endpoint: ${TRACING_JAEGER_ENDPOINT:http://localhost:14268/api/traces}
    sampling-probability: ${TRACING_SAMPLING_PROBABILITY:1.0}

# Local Development Specific
local:
  test-data:
    enabled: true
    auto-load: ${LOAD_SAMPLE_DATA:true}
  
  mock-services:
    philsys:
      enabled: ${MOCK_PHILSYS_ENABLED:true}
      port: ${MOCK_PHILSYS_PORT:9000}
      response-delay: ${MOCK_PHILSYS_RESPONSE_DELAY:1000}
  
  debug:
    enabled: true
    log-requests: true
    log-responses: true
